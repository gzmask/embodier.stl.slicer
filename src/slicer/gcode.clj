(ns slicer.gcode
  (:use clojure.java.io))

(def header-str
  "; generated by embodier 0.0.1")

(defn gcode 
  [cuts]
  (apply str (doall
    (for [cut cuts]
      (let [z-str (str "G1 Z" (:cut-point cut) \newline)
            xy-str (for [line (:result cut)]
                     (if (vector? line)
                       (str "G1 X" (first line) " Y" (second line) " E1" \newline)
                       (str "G1 X" 
                            (first (first line)) " Y" (second (first line)) " E1" \newline "G1 X" 
                            (first (second line)) " Y" (second (second line)) " E1" \newline)))]
        (str z-str (apply str xy-str)))))))

(defn write-gcode
  [gcode-file gcode-str]
  (with-open [g (writer (file gcode-file))]
    (.write g gcode-str)))
